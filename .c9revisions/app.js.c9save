{"ts":1351878207430,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var request = new XMLHttpRequest();\nrequest.open('GET', '/stream/stream_chunk', true);\nrequest.responseType = 'arraybuffer';\n\nrequest.onload = function(oEvent) {\n    var arrayBuffer = request.response;\n    if (arrayBuffer) {\n        var byteArray = new Uint8Array(arrayBuffer);\n        for (var i = 0; i < byteArray.byteLength; i++) {\n            // do something with each byte in the array\n            console.log(byteArray[i]);\n        }\n    }\n};\n\nrequest.send(null);"]],"start1":0,"start2":0,"length1":0,"length2":469}]],"length":469}
{"contributors":[],"silentsave":false,"ts":1351879000361,"patch":[[{"diffs":[[1,"var request = new XMLHttpRequest();\n\n// The actual image\nvar imageBytes = new Uint8Array();\n\n// The chars at the end of the image\nvar endPos = \"\\n--myboundary\";\n\n// Started to find, finished finding\nvar done = false;\nvar started = false;\n\n// Don't know why I have to save these to a ByteArray to do the comparisons but it seems I do\nvar startBytes = new Uint8Array();\nvar startByte = 0xFF;\nvar secondByte = 0xD8;\n\nstartBytes.push(0xFF);\nstartBytes.push(0xD8);\n\n\nvar startNum = startBytes[0];\nvar nextNum = startBytes[1];\n\n// Open the stream\n"],[0,"var request "]],"start1":0,"start2":0,"length1":12,"length2":553},{"diffs":[[0,"uffer';\n"],[-1,"\n"],[0,"request."]],"start1":658,"start2":658,"length1":17,"length2":16},{"diffs":[[0,"d = "],[-1,"function(oE"],[1,"progressHandler;\nrequest.send(null);\n\nfunction progressHandler(e"],[0,"vent) {\n"],[1,"    \n"],[0,"    var "],[-1,"array"],[1,"mjpeg"],[0,"Buff"]],"start1":679,"start2":679,"length1":40,"length2":98},{"diffs":[[0,"    "],[-1,"if (array"],[1,"\n    if (mjpeg"],[0,"Buff"]],"start1":800,"start2":800,"length1":17,"length2":22},{"diffs":[[0,"t8Array("],[-1,"array"],[1,"mjpeg"],[0,"Buffer);"]],"start1":859,"start2":859,"length1":21,"length2":21},{"diffs":[[0,"    "],[-1,"// do something with each byte in the array\n"],[1,"\n            var currentByte = mjpegBuffer[i];\n            var nextByte = mjpegBuffer[i + 1];\n            var thirdByte = mjpegBuffer[i + 2];\n            var fourthByte = mjpegBuffer[i + 3];\n            \n            \n            if (!started) {\n                if (currentByte == startNum && nextByte == nextNum) {\n    "],[0,"    "]],"start1":946,"start2":946,"length1":52,"length2":327},{"diffs":[[0,"        "],[1,"    "],[0,"console."]],"start1":1273,"start2":1273,"length1":16,"length2":20},{"diffs":[[0,"log("],[-1,"byteArray[i]);\n"],[1,"'Started');\n                    started = true;\n                    imageBytes = new Uint8Array();\n                    imageBytes.push(currentByte);\n     "],[0,"        "],[1,"   "],[0,"}\n    "],[-1,"}\n};\n\nrequest.send(null);"],[1,"        }\n            else {\n                if (currentByte == endPos.charCodeAt(0) && nextByte == endPos.charCodeAt(1) && thirdByte == endPos.charCodeAt(2) && fourthByte == endPos.charCodeAt(3)) {\n                    console.log('done');\n                    done = true;\n                    started = false;\n    \n                    console.log(imageBytes);\n                }\n                else {\n                    imageBytes.push(currentByte);\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\n\n\n"]],"start1":1293,"start2":1293,"length1":58,"length2":683}]],"length":1976,"saved":false}
{"ts":1351879233497,"patch":[[{"diffs":[[0,"Bytes = "],[-1,"new Uint8Array()"],[1,"[]"],[0,";\n\n// Th"]],"start1":66,"start2":66,"length1":32,"length2":18},{"diffs":[[0,"Bytes = "],[-1,"new Uint8Array()"],[1,"[]"],[0,";\nvar st"]],"start1":328,"start2":328,"length1":32,"length2":18},{"diffs":[[0,"s = "],[-1,"new Uint8Array()"],[1,"[]"],[0,";\n  "]],"start1":1346,"start2":1346,"length1":24,"length2":10}]],"length":1934,"saved":false}
{"ts":1351879260086,"patch":[[{"diffs":[[0,"'GET', '"],[-1,"/"],[0,"stream/s"]],"start1":562,"start2":562,"length1":17,"length2":16}]],"length":1933,"saved":false}
{"ts":1351879314514,"patch":[[{"diffs":[[0,"ent) {\n    \n"],[1,"    console.log('running');\n    \n"],[0,"    var mjpe"]],"start1":719,"start2":719,"length1":24,"length2":57},{"diffs":[[0,"t.response;\n"],[-1,""],[0,"    \n    if "]],"start1":792,"start2":792,"length1":24,"length2":24},{"diffs":[[0,"le.log('"],[-1,"S"],[1,"s"],[0,"tarted')"]],"start1":1294,"start2":1294,"length1":17,"length2":17},{"diffs":[[0,"ed = false;\n"],[-1,""],[0,"    \n"],[1,"                    // got image data\n"],[0,"            "]],"start1":1756,"start2":1756,"length1":29,"length2":67}]],"length":2004,"saved":false}
{"ts":1351879324897,"patch":[[{"diffs":[[0," // got "],[-1,"image"],[1,"JPG"],[0," data\n  "]],"start1":1792,"start2":1792,"length1":21,"length2":19}]],"length":2002,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351879444486,"patch":[[{"diffs":[[1,"console.log('init');\n\n"],[0,"var request = new XMLHttpReq"]],"start1":0,"start2":0,"length1":28,"length2":50},{"diffs":[[0,"d = "],[-1,"progressHandler;\nrequest.send(null);\n\nfunction progressHandler"],[1,"function"],[0,"(eve"]],"start1":672,"start2":672,"length1":70,"length2":16},{"diffs":[[0,"\n    }\n}"],[-1,"\n\n\n\n\n\n"],[1,";\n\nrequest.send(null);"],[0,"\n\n"]],"start1":1954,"start2":1954,"length1":16,"length2":32}]],"length":1986,"saved":false}
{"ts":1351879602515,"patch":[[{"diffs":[[0,"t.on"],[-1,"load"],[1,"progress"],[0," = f"]],"start1":665,"start2":665,"length1":12,"length2":16},{"diffs":[[0,"function"],[1," updateProgress(event) {\n    if (event.lengthComputable) {\n        var percentComplete = (event.loaded / event.total) * 100;\n        console.log('Loading: ' + percentComplete + '%');\n    }\n};\nrequest.onload = function"],[0,"(event) "]],"start1":680,"start2":680,"length1":16,"length2":233},{"diffs":[[0,"vent) {\n"],[-1,"    "],[0,"\n    con"]],"start1":907,"start2":907,"length1":20,"length2":16},{"diffs":[[0,"ning');\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    var "]],"start1":936,"start2":936,"length1":21,"length2":17},{"diffs":[[0,"t.response;\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    if (mjpe"]],"start1":973,"start2":973,"length1":29,"length2":25},{"diffs":[[0," i++) {\n"],[-1,"            "],[0,"\n"],[1,""],[0,"        "]],"start1":1111,"start2":1111,"length1":29,"length2":17},{"diffs":[[0,"3];\n"],[-1,"            \n            "],[1,"\n"],[0,"\n   "]],"start1":1306,"start2":1306,"length1":33,"length2":9},{"diffs":[[0,"se;\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    "]],"start1":1905,"start2":1905,"length1":13,"length2":9},{"diffs":[[0,"  }\n};\n\n"],[1,""],[0,"request."]],"start1":2126,"start2":2126,"length1":16,"length2":16},{"diffs":[[0,"(null);\n"],[-1,"\n"]],"start1":2146,"start2":2146,"length1":9,"length2":8}]],"length":2154,"saved":false}
{"ts":1351879667230,"patch":[[{"diffs":[[0,"plete = "],[1,"Math.round("],[0,"(event.l"]],"start1":769,"start2":769,"length1":16,"length2":27},{"diffs":[[0,"l) * 100"],[1,")"],[0,";\n      "]],"start1":814,"start2":814,"length1":16,"length2":17}]],"length":2166,"saved":false}
